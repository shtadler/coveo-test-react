{"version":3,"sources":["Engine.tsx","Components/SearchBox.tsx","Components/QuerySummary.tsx","Components/ResultLink.tsx","Components/ResultList.tsx","Components/Pager.tsx","Components/Facet.tsx","Components/DateFacet.tsx","Components/CategoryFacet.tsx","Components/ResultsPerPage.tsx","Components/FacetBreadcrumbs.tsx","Components/CenteredTabs.tsx","Components/Tab.tsx","Components/Sort.tsx","Components/RelevanceInspector.tsx","App.tsx","theme.tsx","index.tsx"],"names":["headlessEngine","HeadlessEngine","configuration","getSampleConfiguration","reducers","searchAppReducers","SearchBox","props","headlessSearchBox","state","buildSearchBox","options","highlightOptions","notMatchDelimiters","open","close","correctionDelimiters","this","subscribe","updateState","setState","Autocomplete","inputValue","value","onInputChange","_","newInputValue","updateText","onChange","submit","suggestions","getOptionLabel","option","rawValue","renderOption","dangerouslySetInnerHTML","__html","highlightedValue","freeSolo","style","width","renderInput","params","TextField","placeholder","variant","size","React","Component","QuerySummary","headlessQuerySummary","buildQuerySummary","Box","mt","input","component","renderBold","firstResult","lastResult","total","toString","hasQuery","query","durationInSeconds","renderRange","renderTotal","renderQuery","renderDuration","hasResults","renderHasResults","renderNoResults","ListItemLink","ListItem","button","ResultLink","interactiveResult","result","buildInteractiveResult","disableGutters","href","clickUri","target","onClick","select","ListItemText","primary","title","secondary","excerpt","ResultList","headlessResultList","headlessResultTemplateManager","buildResultList","fieldsToInclude","buildResultTemplatesManager","registerTemplates","conditions","content","index","key","uniqueId","getDate","Divider","Date","raw","date","toLocaleDateString","List","results","map","selectTemplate","template","Pager","headlessPager","buildPager","numberOfPages","pageNumber","selectPage","currentPage","maxPage","Typography","gutterBottom","Pagination","page","count","e","setPage","shape","Facet","headlessFacet","buildFacet","numberOfValues","field","toggleSelect","showMoreValues","showLessValues","values","mb","FormControlLabel","label","numberOfResults","control","Checkbox","checked","isValueSelected","color","event","facetSearch","search","chosenValue","displayValue","getOptionSelected","blurOnSelect","clearOnBlur","Button","showMore","showLess","mr","p","bgcolor","FormControl","FormLabel","FormGroup","getFacetValues","canShowMoreValues","getFacetSearch","getShowMore","canShowLessValues","getShowLess","DateFacet","headlessDateFacet","buildDateFacet","generateAutomaticRanges","delimiter","split","getDelimitedDate","start","end","getStartDate","getEndDate","getLabel","hoveredStyle","cursor","CategoryFacet","headlessCategoryFacet","buildCategoryFacet","delimitingCharacter","hasActiveValues","deselectAll","IconButton","edge","subtitle","parents","parent","i","isLast","length","align","valuesAlign","position","left","getClearButton","getParents","getValues","defaultProps","ResultsPerPage","headlessResultsPerPage","buildResultsPerPage","initialState","RadioGroup","row","name","defaultValue","set","parseInt","Radio","clearStyle","fontSize","FacetBreadcrumbs","headlessBreadcrumbManager","buildBreadcrumbManager","categoryFacetBreadcrumbs","categoryBreadcrumb","breadcrumbValue","path","join","charAt","toUpperCase","slice","Link","deselect","underline","Grid","container","item","dateFacetBreadcrumbs","dateBreadcrumb","facetBreadcrumbs","breadcrumb","xs","getDateFacetBreadcrumbs","getFacetBreadcrumbs","getCategoryFacetBreadcrumbs","hasBreadcrumbs","CenteredTabs","handleChange","newValue","Paper","Tabs","indicatorColor","textColor","centered","children","HeadlessTab","headlessTab","selectTab","buildTab","expression","id","Sort","headlessSort","relevanceSortCriterion","buildRelevanceSortCriterion","dateDescendingSortCriterion","buildDateSortCriterion","SortOrder","Descending","dateAscendingSortCriterion","Ascending","buildSort","criterion","sortBy","NativeSelect","RelevanceInspector","headlessRelevanceInspector","unsubscribe","switchDebug","isEnabled","disable","enable","buildRelevanceInspector","automaticallyLogInformation","console","info","alignItems","spacing","Switch","App","logInterfaceLoad","loadSearchAnalyticsActions","executeSearch","loadSearchActions","dispatch","Container","maxWidth","my","selected","theme","createMuiTheme","palette","type","main","error","red","A400","background","default","rootElement","document","getElementById","render","ThemeProvider","CssBaseline"],"mappings":"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","file":"static/js/main.f6703ba7.chunk.js","sourcesContent":["import { HeadlessEngine, searchAppReducers } from \"@coveo/headless\";\n\nexport const headlessEngine = new HeadlessEngine({\n  configuration: HeadlessEngine.getSampleConfiguration(),\n  reducers: searchAppReducers\n});\n","/* eslint-disable no-use-before-define */\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {\n  buildSearchBox,\n  SearchBox as SearchBoxType,\n  SearchBoxState\n} from \"@coveo/headless\";\nimport { headlessEngine } from \"../Engine\";\n\nexport default class SearchBox extends React.Component {\n  private headlessSearchBox: SearchBoxType;\n  state: SearchBoxState;\n\n  constructor(props: any) {\n    super(props);\n\n    this.headlessSearchBox = buildSearchBox(headlessEngine, {\n      options: {\n        highlightOptions: {\n          notMatchDelimiters: {\n            open: \"<strong>\",\n            close: \"</strong>\"\n          },\n          correctionDelimiters: {\n            open: \"<i>\",\n            close: \"</i>\"\n          }\n        }\n      }\n    });\n    this.state = this.headlessSearchBox.state;\n  }\n\n  componentDidMount() {\n    this.headlessSearchBox.subscribe(() => this.updateState());\n  }\n\n  updateState() {\n    this.setState(this.headlessSearchBox.state);\n  }\n\n  render() {\n    return (\n      <Autocomplete\n        inputValue={this.state.value}\n        onInputChange={(_, newInputValue) => {\n          this.headlessSearchBox.updateText(newInputValue);\n        }}\n        onChange={() => {\n          this.headlessSearchBox.submit();\n        }}\n        options={this.state.suggestions}\n        getOptionLabel={(option) => {\n          return typeof option === \"object\" ? option.rawValue : option;\n        }}\n        renderOption={(option) => {\n          return (\n            <div\n              dangerouslySetInnerHTML={{ __html: option.highlightedValue }}\n            ></div>\n          );\n        }}\n        freeSolo\n        style={{ width: \"auto\" }}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            placeholder=\"Search\"\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        )}\n      />\n    );\n  }\n}\n","/* eslint-disable no-use-before-define */\nimport React from \"react\";\nimport {\n  buildQuerySummary,\n  QuerySummary as QuerySummaryType,\n  QuerySummaryState\n} from \"@coveo/headless\";\nimport { headlessEngine } from \"../Engine\";\nimport { Box } from \"@material-ui/core\";\n\nexport default class QuerySummary extends React.Component {\n  private headlessQuerySummary: QuerySummaryType;\n  state: QuerySummaryState;\n\n  constructor(props: any) {\n    super(props);\n\n    this.headlessQuerySummary = buildQuerySummary(headlessEngine);\n\n    this.state = this.headlessQuerySummary.state;\n  }\n\n  componentDidMount() {\n    this.headlessQuerySummary.subscribe(() => this.updateState());\n  }\n\n  updateState() {\n    this.setState(this.headlessQuerySummary.state);\n  }\n\n  renderNoResults() {\n    return <Box mt={5}>No results</Box>;\n  }\n\n  renderBold(input: string) {\n    return (\n      <Box component=\"span\">\n        <strong>{input}</strong>\n      </Box>\n    );\n  }\n\n  renderRange() {\n    return this.renderBold(\n      ` ${this.state.firstResult}-${this.state.lastResult}`\n    );\n  }\n\n  renderTotal() {\n    return (\n      <Box component=\"span\">\n        {\" \"}\n        of {this.renderBold(this.state.total.toString())}\n      </Box>\n    );\n  }\n\n  renderQuery() {\n    if (this.state.hasQuery) {\n      return (\n        <Box component=\"span\"> for {this.renderBold(this.state.query)}</Box>\n      );\n    }\n  }\n\n  renderDuration() {\n    return ` in ${this.state.durationInSeconds} seconds`;\n  }\n\n  renderHasResults() {\n    return (\n      <Box mt={5}>\n        Results{this.renderRange()}\n        {this.renderTotal()}\n        {this.renderQuery()}\n        {this.renderDuration()}\n      </Box>\n    );\n  }\n\n  render() {\n    if (!this.state.hasResults) {\n      return this.renderNoResults();\n    }\n    return this.renderHasResults();\n  }\n}\n","import {\n  buildInteractiveResult,\n  InteractiveResult,\n  Result\n} from \"@coveo/headless\";\nimport React from \"react\";\nimport { ListItem, ListItemText } from \"@material-ui/core\";\nimport { headlessEngine } from \"../Engine\";\n\nfunction ListItemLink(props: any) {\n  return <ListItem button component=\"a\" {...props} />;\n}\n\ninterface ILinkProps {\n  result: Result;\n}\n\nexport default class ResultLink extends React.Component<ILinkProps, {}> {\n  private interactiveResult: InteractiveResult;\n  private result: Result;\n\n  constructor(props: ILinkProps) {\n    super(props);\n    this.result = props.result;\n    this.interactiveResult = buildInteractiveResult(headlessEngine, {\n      options: { result: props.result }\n    });\n  }\n\n  render() {\n    return (\n      <ListItem disableGutters>\n        <ListItemLink\n          disableGutters\n          href={this.result.clickUri}\n          target=\"_blank\"\n          onClick={() => this.interactiveResult.select()}\n        >\n          <ListItemText\n            primary={this.result.title}\n            secondary={this.result.excerpt}\n          />\n        </ListItemLink>\n      </ListItem>\n    );\n  }\n}\n","/* eslint-disable no-use-before-define */\nimport React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport { Box } from \"@material-ui/core\";\nimport ResultLink from \"./ResultLink\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { ListItem, ListItemText } from \"@material-ui/core\";\nimport {\n  buildResultList,\n  ResultList as ResultListType,\n  ResultTemplatesManager,\n  buildResultTemplatesManager,\n  Result,\n  ResultListState\n} from \"@coveo/headless\";\nimport { headlessEngine } from \"../Engine\";\n\nexport default class ResultList extends React.Component {\n  private headlessResultList: ResultListType;\n  private headlessResultTemplateManager: ResultTemplatesManager;\n  state: ResultListState;\n\n  constructor(props: any) {\n    super(props);\n\n    this.headlessResultList = buildResultList(headlessEngine, {\n      options: {\n        fieldsToInclude: [\"date\"]\n      }\n    });\n\n    this.state = this.headlessResultList.state;\n\n    this.headlessResultTemplateManager = buildResultTemplatesManager(\n      headlessEngine\n    );\n    this.headlessResultTemplateManager.registerTemplates({\n      conditions: [],\n      content: (result: Result, index: number) => (\n        <Box key={result.uniqueId}>\n          {/* In this implementation, the ResultLink component is\n           responsible for logging a 'click' event to Coveo UA */}\n          <ResultLink result={result} />\n          <ListItem disableGutters>\n            <ListItemText secondary={this.getDate(result)} />\n          </ListItem>\n          <Divider />\n        </Box>\n      )\n    });\n  }\n\n  componentDidMount() {\n    this.headlessResultList.subscribe(() => this.updateState());\n  }\n\n  updateState() {\n    this.setState(this.headlessResultList.state);\n  }\n\n  componentWillUnmount() {\n    this.headlessResultList.subscribe(() => {});\n  }\n\n  getDate(result: Result) {\n    const date: Date = new Date(result.raw.date);\n    return date.toLocaleDateString();\n  }\n\n  render() {\n    return (\n      <List>\n        {this.state.results.map((result: Result) => {\n          const template: any = this.headlessResultTemplateManager.selectTemplate(\n            result\n          );\n          return template(result);\n        })}\n      </List>\n    );\n  }\n}\n","/* eslint-disable no-use-before-define */\nimport React from \"react\";\nimport { Pagination } from \"@material-ui/lab\";\nimport Box from \"@material-ui/core/Box/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { buildPager, Pager as PagerType, PagerState } from \"@coveo/headless\";\nimport { headlessEngine } from \"../Engine\";\n\nexport default class Pager extends React.Component {\n  private headlessPager: PagerType;\n  state: PagerState;\n\n  constructor(props: any) {\n    super(props);\n\n    this.headlessPager = buildPager(headlessEngine, {\n      options: { numberOfPages: 3 }\n    });\n\n    this.state = this.headlessPager.state;\n  }\n\n  componentDidMount() {\n    this.headlessPager.subscribe(() => this.updateState());\n  }\n\n  updateState() {\n    this.setState(this.headlessPager.state);\n  }\n\n  setPage(pageNumber: number) {\n    this.headlessPager.selectPage(pageNumber);\n  }\n\n  get page() {\n    return this.headlessPager.state.currentPage;\n  }\n\n  get count() {\n    return this.headlessPager.state.maxPage;\n  }\n\n  render() {\n    return (\n      <Box>\n        <Typography gutterBottom>Current page</Typography>\n        <Pagination\n          page={this.page}\n          count={this.count}\n          onChange={(e, page) => this.setPage(page)}\n          variant=\"outlined\"\n          shape=\"rounded\"\n          size=\"small\"\n        />\n      </Box>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Facet as FacetType,\n  FacetState,\n  buildFacet,\n  FacetValue\n} from \"@coveo/headless\";\nimport { headlessEngine } from \"../Engine\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Box from \"@material-ui/core/Box\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport interface IFacetProps {\n  title: string;\n  field: string;\n}\n\nexport default class Facet extends React.Component<IFacetProps, {}> {\n  private headlessFacet: FacetType;\n  state: FacetState & {\n    inputValue: \"\";\n  };\n\n  constructor(props: any) {\n    super(props);\n\n    this.headlessFacet = buildFacet(headlessEngine, {\n      options: {\n        numberOfValues: 3,\n        field: this.props.field\n      }\n    });\n\n    this.state = {\n      ...this.headlessFacet.state,\n      inputValue: \"\"\n    };\n  }\n  componentDidMount() {\n    this.headlessFacet.subscribe(() => this.updateState());\n  }\n\n  componentWillUnmount() {\n    this.headlessFacet.subscribe(() => {});\n  }\n\n  updateState() {\n    this.setState(this.headlessFacet.state);\n  }\n\n  toggleSelect(value: FacetValue) {\n    this.headlessFacet.toggleSelect(value);\n  }\n\n  showMore() {\n    this.headlessFacet.showMoreValues();\n  }\n\n  showLess() {\n    this.headlessFacet.showLessValues();\n  }\n\n  getFacetValues() {\n    return this.state.values.map((value: FacetValue) => (\n      <Box mb={1} key={value.value}>\n        <FormControlLabel\n          label={`${value.value} (${value.numberOfResults})`}\n          control={\n            <Checkbox\n              checked={this.headlessFacet.isValueSelected(value)}\n              color=\"primary\"\n              onChange={(event) => this.toggleSelect(value)}\n            />\n          }\n        />\n      </Box>\n    ));\n  }\n\n  getFacetSearch() {\n    return (\n      <Autocomplete\n        inputValue={this.state.inputValue}\n        onInputChange={(_, newInputValue) => {\n          this.setState({ inputValue: newInputValue });\n          this.headlessFacet.facetSearch.updateText(newInputValue);\n          this.headlessFacet.facetSearch.search();\n        }}\n        onChange={(_, chosenValue: any) => {\n          if (chosenValue != null) {\n            this.headlessFacet.facetSearch.select(chosenValue);\n          }\n          this.setState({ inputValue: \"\" });\n        }}\n        options={this.state.facetSearch.values}\n        getOptionLabel={(option: any) => option.displayValue}\n        getOptionSelected={() => true}\n        blurOnSelect\n        clearOnBlur\n        style={{ width: \"auto\" }}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            placeholder=\"Search\"\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        )}\n      />\n    );\n  }\n\n  getShowMore() {\n    return (\n      <Button\n        onClick={() => {\n          this.showMore();\n        }}\n      >\n        Show More\n      </Button>\n    );\n  }\n\n  getShowLess() {\n    return (\n      <Button\n        onClick={() => {\n          this.showLess();\n        }}\n      >\n        Show Less\n      </Button>\n    );\n  }\n\n  render() {\n    return (\n      <Box mt={5} mr={3} p={1} bgcolor=\"#5D7289\">\n        <FormControl component=\"fieldset\">\n          <Box mb={1}>\n            <FormLabel component=\"legend\" color=\"primary\">\n              {this.props.title}\n            </FormLabel>\n          </Box>\n          <FormGroup>{this.getFacetValues()}</FormGroup>\n        </FormControl>\n        {this.state.canShowMoreValues && this.getFacetSearch()}\n        {this.state.canShowMoreValues && this.getShowMore()}\n        {this.state.canShowLessValues && this.getShowLess()}\n      </Box>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  DateFacet as DateFacetType,\n  DateFacetState,\n  buildDateFacet,\n  DateFacetValue\n} from \"@coveo/headless\";\nimport { headlessEngine } from \"../Engine\";\nimport { IFacetProps } from \"./Facet\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Box from \"@material-ui/core/Box\";\n\ninterface IRangeDateFacetProps extends IFacetProps {\n  delimiter?: string;\n}\n\nexport default class DateFacet extends React.Component<\n  IRangeDateFacetProps,\n  {}\n> {\n  private headlessDateFacet: DateFacetType;\n  state: DateFacetState & {\n    inputValue: \"\";\n  };\n\n  constructor(props: any) {\n    super(props);\n\n    this.headlessDateFacet = buildDateFacet(headlessEngine, {\n      options: {\n        numberOfValues: 3,\n        field: this.props.field,\n        generateAutomaticRanges: true\n      }\n    });\n\n    this.state = {\n      ...this.headlessDateFacet.state,\n      inputValue: \"\"\n    };\n  }\n  componentDidMount() {\n    this.headlessDateFacet.subscribe(() => this.updateState());\n  }\n\n  componentWillUnmount() {\n    this.headlessDateFacet.subscribe(() => {});\n  }\n\n  updateState() {\n    this.setState(this.headlessDateFacet.state);\n  }\n\n  toggleSelect(value: DateFacetValue) {\n    this.headlessDateFacet.toggleSelect(value);\n  }\n\n  getDelimitedDate(date: string) {\n    if (this.props.delimiter) {\n      return date.split(this.props.delimiter)[0];\n    }\n    return date;\n  }\n\n  getStartDate(value: DateFacetValue) {\n    return this.getDelimitedDate(value.start);\n  }\n\n  getEndDate(value: DateFacetValue) {\n    return this.getDelimitedDate(value.end);\n  }\n\n  getLabel(value: DateFacetValue) {\n    return `${this.getStartDate(value)}-${this.getEndDate(value)} (${\n      value.numberOfResults\n    })`;\n  }\n\n  getFacetValues() {\n    return this.state.values.map(\n      (value: DateFacetValue) =>\n        value.numberOfResults !== 0 && (\n          <Box mb={1} key={value.start}>\n            <FormControlLabel\n              label={this.getLabel(value)}\n              control={\n                <Checkbox\n                  checked={this.headlessDateFacet.isValueSelected(value)}\n                  color=\"primary\"\n                  onChange={(event) => this.toggleSelect(value)}\n                />\n              }\n            />\n          </Box>\n        )\n    );\n  }\n\n  render() {\n    return (\n      <Box mt={5} mr={3} p={1} bgcolor=\"#5D7289\">\n        <FormControl component=\"fieldset\">\n          <Box mb={1}>\n            <FormLabel component=\"legend\" color=\"primary\">\n              {this.props.title}\n            </FormLabel>\n          </Box>\n          <FormGroup>{this.getFacetValues()}</FormGroup>\n        </FormControl>\n      </Box>\n    );\n  }\n}\n","import React from \"react\";\nimport { headlessEngine } from \"../Engine\";\nimport {\n  CategoryFacet as CategoryFacetType,\n  CategoryFacetState,\n  buildCategoryFacet,\n  CategoryFacetValue\n} from \"@coveo/headless\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Box from \"@material-ui/core/Box\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Button from \"@material-ui/core/Button\";\n\nconst hoveredStyle = {\n  cursor: \"pointer\",\n  color: \"primary\"\n};\n\ninterface ICategoryFacetProps {\n  title: string;\n  field: string;\n  subtitle?: string;\n}\n\nexport default class CategoryFacet extends React.Component<\n  ICategoryFacetProps,\n  {}\n> {\n  public static defaultProps = {\n    subtitle: \"All Categories\"\n  };\n\n  private headlessCategoryFacet: CategoryFacetType;\n  state: CategoryFacetState & {\n    inputValue: \"\";\n  };\n\n  constructor(props: any) {\n    super(props);\n\n    // a typical atlgeographicalhierarchy field value for a city would appear: Continent;Continent|Country;\n    // for example Washington, DC. would be: North America;North America|United States;\n    this.headlessCategoryFacet = buildCategoryFacet(headlessEngine, {\n      options: {\n        numberOfValues: 3,\n        field: this.props.field,\n        delimitingCharacter: \"|\"\n      }\n    });\n\n    this.state = this.headlessCategoryFacet.state;\n  }\n\n  componentDidMount() {\n    this.headlessCategoryFacet.subscribe(() => this.updateState());\n  }\n\n  componentWillUnmount() {\n    this.headlessCategoryFacet.subscribe(() => {});\n  }\n\n  updateState() {\n    this.setState(this.headlessCategoryFacet.state);\n  }\n\n  toggleSelect(value: CategoryFacetValue) {\n    this.headlessCategoryFacet.toggleSelect(value);\n  }\n\n  showMore() {\n    this.headlessCategoryFacet.showMoreValues();\n  }\n\n  showLess() {\n    this.headlessCategoryFacet.showLessValues();\n  }\n  //sends left position offset value to getValues <Box> depending on state\n  valuesAlign() {\n    return this.state.hasActiveValues ? \"20%\" : \"0%\";\n  }\n\n  getClearButton() {\n    if (!this.state.hasActiveValues) {\n      return null;\n    }\n    return (\n      <div onClick={() => this.headlessCategoryFacet.deselectAll()}>\n        <Typography>\n          <IconButton edge=\"start\" size=\"small\">\n            <ChevronLeftIcon />\n          </IconButton>\n          {this.props.subtitle}\n        </Typography>\n      </div>\n    );\n  }\n\n  getParents() {\n    const parents = this.state.parents;\n\n    return parents.map((parent, i) => {\n      const isLast = i === parents.length - 1;\n      return (\n        <div\n          key={parent.value}\n          onClick={() =>\n            !isLast && this.headlessCategoryFacet.toggleSelect(parent)\n          }\n        >\n          <Typography align=\"left\" color=\"textSecondary\" style={hoveredStyle}>\n            {!isLast && (\n              <IconButton edge=\"start\" size=\"small\">\n                <ChevronLeftIcon />\n              </IconButton>\n            )}\n            {parent.value}\n          </Typography>\n        </div>\n      );\n    });\n  }\n\n  getValues() {\n\n    const align = this.valuesAlign();\n\n    return this.state.values.map((value) => (\n      <div\n        key={value.value}\n        onClick={() => this.headlessCategoryFacet.toggleSelect(value)}\n      >\n        <Box position=\"relative\" left={align}>\n          <Typography align=\"left\" style={hoveredStyle}>\n            {value.value} ({value.numberOfResults})\n          </Typography>\n        </Box>\n      </div>\n    ));\n  }\n\n\n  getShowMore() {\n    return (\n      <Button\n        onClick={() => {\n          this.showMore();\n        }}\n      >\n        Show More\n      </Button>\n    );\n  }\n\n  getShowLess() {\n    return (\n      <Button\n        onClick={() => {\n          this.showLess();\n        }}\n      >\n        Show Less\n      </Button>\n    );\n  }\n\n  render() {\n    return (\n      <Box mt={5} mr={3} p={1} bgcolor=\"#5D7289\">\n        <Box mb={1}>\n          <FormLabel component=\"legend\" color=\"primary\">\n            {this.props.title}\n          </FormLabel>\n        </Box>\n        {this.getClearButton()}\n        {this.getParents()}\n        {this.getValues()}\n        {this.state.canShowMoreValues && this.getShowMore()}\n        {this.state.canShowLessValues && this.getShowLess()}\n      </Box>\n    );\n  }\n}\n","/* eslint-disable no-use-before-define */\nimport React from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  buildResultsPerPage,\n  ResultsPerPage as ResultsPerPageType,\n  ResultsPerPageState\n} from \"@coveo/headless\";\nimport { headlessEngine } from \"../Engine\";\n\nexport default class ResultsPerPage extends React.Component {\n  private headlessResultsPerPage: ResultsPerPageType;\n  state: ResultsPerPageState;\n\n  constructor(props: any) {\n    super(props);\n\n    this.headlessResultsPerPage = buildResultsPerPage(headlessEngine, {\n      initialState: { numberOfResults: 3 }\n    });\n\n    this.state = this.headlessResultsPerPage.state;\n  }\n\n  componentDidMount() {\n    this.headlessResultsPerPage.subscribe(() => this.updateState());\n  }\n\n  updateState() {\n    this.setState(this.headlessResultsPerPage.state);\n  }\n\n  render() {\n    return (\n      <FormControl component=\"fieldset\">\n        <Typography>Results per page</Typography>\n        <RadioGroup\n          row\n          name=\"test\"\n          defaultValue=\"3\"\n          onChange={(event) => {\n            this.headlessResultsPerPage.set(parseInt(event.target.value, 10));\n          }}\n        >\n          <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\n          <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\n          <FormControlLabel value=\"5\" control={<Radio />} label=\"5\" />\n        </RadioGroup>\n      </FormControl>\n    );\n  }\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/IconButton\";\nimport {\n  BreadcrumbManager as BreadcrumbManagerType,\n  BreadcrumbManagerState,\n  buildBreadcrumbManager\n} from \"@coveo/headless\";\nimport { headlessEngine } from \"../Engine\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nconst hoveredStyle = {\n  cursor: \"pointer\"\n};\n\nconst clearStyle = {\n  fontSize: \"1em\"\n};\n\n// Currently, this component only displays breadcrumbs from basic facets.\nexport default class FacetBreadcrumbs extends React.Component {\n  private headlessBreadcrumbManager: BreadcrumbManagerType;\n  state: BreadcrumbManagerState;\n\n  constructor(props: any) {\n    super(props);\n\n    this.headlessBreadcrumbManager = buildBreadcrumbManager(headlessEngine);\n\n    this.state = this.headlessBreadcrumbManager.state;\n  }\n\n  componentDidMount() {\n    this.headlessBreadcrumbManager.subscribe(() => this.updateState());\n  }\n\n  updateState() {\n    this.setState(this.headlessBreadcrumbManager.state);\n  }\n\n  getCategoryFacetBreadcrumbs() {\n    const breadcrumbs = this.state.categoryFacetBreadcrumbs;\n    return breadcrumbs.map((categoryBreadcrumb) => {\n      const breadcrumbValue = categoryBreadcrumb.path\n        .map((value) => value.value)\n        .join(\" / \");\n\n      return (\n        <div key={categoryBreadcrumb.field}>\n          <Typography>\n            {categoryBreadcrumb.field.charAt(0).toUpperCase() +\n              categoryBreadcrumb.field.slice(1)}\n            :\n          </Typography>\n\n          <div key={breadcrumbValue}>\n            <Link\n              onClick={() => categoryBreadcrumb.deselect()}\n              variant=\"caption\"\n              underline=\"none\"\n              style={hoveredStyle}\n            >\n              <Grid container>\n                <Grid item>\n                  <Box mt={0.3}>{breadcrumbValue}</Box>\n                </Grid>\n                <Grid item>\n                  <ClearIcon fontSize=\"small\" />\n                </Grid>\n              </Grid>\n            </Link>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  getDateFacetBreadcrumbs() {\n    let dateBreadcrumbs = this.state.dateFacetBreadcrumbs;\n    return dateBreadcrumbs.map((dateBreadcrumb) => (\n      <div key={dateBreadcrumb.field}>\n        {dateBreadcrumb.values.map((value) => (\n          <div key={dateBreadcrumb.field + value.value.start}>\n            <Link\n              onClick={() => value.deselect()}\n              variant=\"caption\"\n              underline=\"none\"\n              style={hoveredStyle}\n            >\n              <Grid container>\n                <Grid item>\n                  <Box mt={0.3}>\n                    {value.value.start.split(\"@\")[0]}-\n                    {value.value.end.split(\"@\")[0]}\n                  </Box>\n                </Grid>\n                <Grid item>\n                  <ClearIcon fontSize=\"small\" />\n                </Grid>\n              </Grid>\n            </Link>\n          </div>\n        ))}\n      </div>\n    ));\n  }\n\n  getFacetBreadcrumbs() {\n    const breadcrumbs = this.state.facetBreadcrumbs;\n    return breadcrumbs.map((breadcrumb) => (\n      <div key={breadcrumb.field}>\n        <Typography>\n          {breadcrumb.field.charAt(0).toUpperCase() + breadcrumb.field.slice(1)}\n          :\n        </Typography>\n        {breadcrumb.values.map((value) => (\n          <div key={breadcrumb.field + value.value.value}>\n            <Link\n              onClick={() => value.deselect()}\n              variant=\"caption\"\n              underline=\"none\"\n              style={hoveredStyle}\n            >\n              <Grid container>\n                <Grid item>\n                  <Box mt={0.3}>{value.value.value}</Box>\n                </Grid>\n                <Grid item>\n                  <ClearIcon fontSize=\"small\" />\n                </Grid>\n              </Grid>\n            </Link>\n          </div>\n        ))}\n      </div>\n    ));\n  }\n\n  render() {\n    return (\n      <Grid container>\n        <Grid item xs={10}>\n          {this.getDateFacetBreadcrumbs()}\n          {this.getFacetBreadcrumbs()}\n          {this.getCategoryFacetBreadcrumbs()}\n        </Grid>\n        <Grid item xs={2}>\n          {this.headlessBreadcrumbManager.state.hasBreadcrumbs && (\n            <Button\n              size=\"small\"\n              onClick={this.headlessBreadcrumbManager.deselectAll}\n              style={clearStyle}\n            >\n              Clear All Filters\n            </Button>\n          )}\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\n\nexport default class CenteredTabs extends React.Component {\n  state = {\n    value: 0\n  };\n\n  handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    this.setState({ value: newValue });\n  };\n\n  render() {\n    return (\n      <Paper>\n        <Tabs\n          value={this.state.value}\n          onChange={this.handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          centered\n        >\n          {this.props.children}\n        </Tabs>\n      </Paper>\n    );\n  }\n}\n","/* eslint-disable no-use-before-define */\nimport React from \"react\";\nimport { Tab as MaterialUITab, TabProps } from \"@material-ui/core/\";\nimport { buildTab, Tab, TabState } from \"@coveo/headless\";\nimport { headlessEngine } from \"../Engine\";\n\ninterface ITabProps extends TabProps {\n  id: string;\n  expression: string;\n  selected?: boolean;\n}\n\nexport default class HeadlessTab extends React.Component<ITabProps, {}> {\n  private headlessTab: Tab;\n  state: TabState;\n\n  constructor(props: any) {\n    super(props);\n\n    this.headlessTab = buildTab(headlessEngine, {\n      options: {\n        expression: this.props.expression,\n        id: this.props.id\n      }\n    });\n    this.state = this.headlessTab.state;\n  }\n\n  componentDidMount() {\n    this.headlessTab.subscribe(() => this.updateState());\n  }\n\n  updateState() {\n    this.setState(this.headlessTab.state);\n  }\n\n  selectTab = () => {\n    this.headlessTab.select();\n  };\n\n  render() {\n    return (\n      <div onClick={this.selectTab}>\n        <MaterialUITab {...this.props} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Sort as SortType,\n  SortState,\n  buildSort,\n  buildRelevanceSortCriterion,\n  buildDateSortCriterion,\n  SortOrder,\n  SortByRelevancy,\n  SortByDate\n} from \"@coveo/headless\";\nimport { headlessEngine } from \"../Engine\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\n\nexport default class Sort extends React.Component {\n  private headlessSort: SortType;\n  state: SortState;\n  relevanceSortCriterion: SortByRelevancy = buildRelevanceSortCriterion();\n  dateDescendingSortCriterion: SortByDate = buildDateSortCriterion(\n    SortOrder.Descending\n  );\n  dateAscendingSortCriterion: SortByDate = buildDateSortCriterion(\n    SortOrder.Ascending\n  );\n\n  constructor(props: any) {\n    super(props);\n\n    this.headlessSort = buildSort(headlessEngine, {\n      initialState: {\n        criterion: this.relevanceSortCriterion\n      }\n    });\n\n    this.state = this.headlessSort.state;\n  }\n\n  componentDidMount() {\n    this.headlessSort.subscribe(() => this.updateState());\n  }\n\n  updateState() {\n    this.setState(this.headlessSort.state);\n  }\n\n  handleChange(event: any) {\n    switch (event.target.value) {\n      case \"relevance\":\n        this.headlessSort.sortBy(this.relevanceSortCriterion);\n        break;\n      case \"datedescending\":\n        this.headlessSort.sortBy(this.dateDescendingSortCriterion);\n        break;\n      default:\n        this.headlessSort.sortBy(this.dateAscendingSortCriterion);\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <FormControl>\n        <NativeSelect onChange={(event: any) => this.handleChange(event)}>\n          <option value=\"relevance\">Relevance</option>\n          <option value=\"datedescending\">Date Descending</option>\n          <option value=\"dateascending\">Date Ascending</option>\n        </NativeSelect>\n      </FormControl>\n    );\n  }\n}\n","/* eslint-disable no-use-before-define */\nimport React from \"react\";\nimport {\n  buildRelevanceInspector,\n  RelevanceInspector as RelevanceInspectorType,\n  RelevanceInspectorState,\n  Unsubscribe\n} from \"@coveo/headless\";\nimport { headlessEngine } from \"../Engine\";\nimport {\n  FormControlLabel,\n  FormGroup,\n  Grid,\n  Switch,\n  Typography\n} from \"@material-ui/core\";\n\nexport default class RelevanceInspector extends React.Component {\n  private headlessRelevanceInspector: RelevanceInspectorType;\n\n  state: RelevanceInspectorState;\n  unsubscribe!: Unsubscribe;\n\n  constructor(props: any) {\n    super(props);\n    this.headlessRelevanceInspector = buildRelevanceInspector(headlessEngine, {\n      options: {\n        automaticallyLogInformation: false\n      }\n    });\n    this.state = this.headlessRelevanceInspector.state;\n  }\n\n  componentDidMount() {\n    this.unsubscribe = this.headlessRelevanceInspector.subscribe(() =>\n      this.updateState()\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.state.isEnabled) {\n      console.info(\"Debug info: \", this.state);\n    }\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  updateState() {\n    this.setState(this.headlessRelevanceInspector.state);\n  }\n\n  switchDebug = () => {\n    if (this.state.isEnabled) {\n      this.headlessRelevanceInspector.disable();\n    } else {\n      this.headlessRelevanceInspector.enable();\n    }\n  };\n\n  render() {\n    return (\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n          <Grid item>Debug info: </Grid>\n          <FormGroup row>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={this.state.isEnabled}\n                  onChange={this.switchDebug}\n                  name=\"checkDebug\"\n                />\n              }\n              label=\"\"\n            />\n          </FormGroup>\n        </Grid>\n      </Typography>\n    );\n  }\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport SearchBox from \"./Components/SearchBox\";\nimport QuerySummary from \"./Components/QuerySummary\";\nimport ResultList from \"./Components/ResultList\";\nimport Pager from \"./Components/Pager\";\nimport Facet from \"./Components/Facet\";\nimport DateFacet from \"./Components/DateFacet\";\nimport CategoryFacet from \"./Components/CategoryFacet\";\nimport ResultsPerPage from \"./Components/ResultsPerPage\";\nimport FacetBreadcrumbs from \"./Components/FacetBreadcrumbs\";\nimport { loadSearchAnalyticsActions, loadSearchActions } from \"@coveo/headless\";\nimport { headlessEngine } from \"./Engine\";\nimport CenteredTabs from \"./Components/CenteredTabs\";\nimport HeadlessTab from \"./Components/Tab\";\nimport Sort from \"./Components/Sort\";\nimport RelevanceInspector from \"./Components/RelevanceInspector\";\n\nexport default class App extends React.Component {\n  componentDidMount() {\n    const { logInterfaceLoad } = loadSearchAnalyticsActions(headlessEngine);\n    const { executeSearch } = loadSearchActions(headlessEngine);\n\n    headlessEngine.dispatch(executeSearch(logInterfaceLoad()));\n  }\n\n  render() {\n    return (\n      <Container maxWidth=\"md\">\n        <Box my={3}>\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n            Coveo Headless + Material UI\n          </Typography>\n          <CenteredTabs>\n            <HeadlessTab\n              selected={true}\n              id=\"All\"\n              label=\"All Content\"\n              expression=\"\"\n            />\n            <HeadlessTab\n              id=\"Countries\"\n              label=\"Countries\"\n              expression='@source==\"\n              Coveo Sample - ListCountries\"'\n            />\n            <HeadlessTab\n              id=\"YouTube\"\n              label=\"BBC News YouTube\"\n              expression='@source==\"Coveo Samples - Youtube BBC News\"'\n            />\n          </CenteredTabs>\n          <SearchBox />\n          <Box my={1}>\n            <FacetBreadcrumbs />\n            <Grid container>\n              <Grid item xs={4}>\n                <Facet title=\"Source\" field=\"source\" />\n                <Facet title=\"File Type\" field=\"filetype\" />\n                <DateFacet title=\"Date\" field=\"sysdate\" delimiter=\"/\" />\n                <CategoryFacet\n                  title=\"Location\"\n                  field=\"atlgeographicalhierarchy\"\n                  subtitle=\"All Continents\"\n                />\n              </Grid>\n              <Grid item xs={8}>\n                <Grid container alignItems=\"flex-end\">\n                  <Grid item xs={8}>\n                    <QuerySummary />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Sort />\n                  </Grid>\n                </Grid>\n                <ResultList />\n              </Grid>\n            </Grid>\n          </Box>\n          <Box my={4}>\n            <Grid container>\n              <Grid item xs={6}>\n                <Pager />\n              </Grid>\n              <Grid item xs={6}>\n                <ResultsPerPage />\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Grid item xs={6}>\n          <RelevanceInspector />\n        </Grid>\n      </Container>\n    );\n  }\n}\n","import red from \"@material-ui/core/colors/red\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: \"#f58020\"\n    },\n    secondary: {\n      main: \"#004990\"\n    },\n    error: {\n      main: red.A400\n    },\n    background: {\n      default: \"#1e253f\"\n    }\n  }\n});\n\nexport default theme;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport App from \"./App\";\nimport theme from \"./theme\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  rootElement\n);\n"],"sourceRoot":""}